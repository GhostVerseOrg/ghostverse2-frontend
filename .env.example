#NEXT_PUBLIC_STRAPI_API_URL=http://0.0.0.0:1337/graphql
NEXT_PUBLIC_STRAPI_API_URL=https://ghost-cms-app-8rv8n.ondigitalocean.app/graphql

# =============================================
# Public variables (exposed on the frontend)
# =============================================

# MultiversX chain (can be devnet, testnet, mainnet)
NEXT_PUBLIC_MULTIVERSX_CHAIN = mainnet

# Wallet Connect 2 Project Id. This one will work only with this project
# Get yours at: https://cloud.walletconnect.com/sign-in
NEXT_PUBLIC_WC_PROJECT_ID = 817e89e8d971404e1dcf312b97dc3f35

# This is basically the main domain of your dapp
NEXT_PUBLIC_DAPP_HOST = https://ghostverse2.ghostverse.org/

# =============================================
# Public variables for the demo only
# =============================================

# The wallet address used for the demo EGLD transaction on the devnet
NEXT_PUBLIC_TRANSFER_ADDRESS = erd17a4wydhhd6t3hhssvcp9g23ppn7lgkk4g2tww3eqzx4mlq95dukss0g50f

# The smart contract address used for minting the NFT token (as example deployed Elven Tools Smart Contract)
NEXT_PUBLIC_MINT_SMART_CONTRACT_ADDRESS = erd1qqqqqqqqqqqqqpgqufmyqvy3kvda2uywqgx809lglxftq9t667es3956pv

# The function/endpoint name for minting on the smart contract
NEXT_PUBLIC_MINT_FUNCTION_NAME = mint

# The function/view name for getting the total tokens left to be mint on smart contract
NEXT_PUBLIC_QUERY_FUNCTION_NAME = getTotalTokensLeft

# The payment per one NFT token, defined on smart contract (0.01 EGLD)
NEXT_PUBLIC_MINT_PAYMENT_PER_TOKEN = 0.01

# The amount of EGLD to send in the demo transfer (0.001 EGLD)
NEXT_PUBLIC_EGLD_TRANSFER_AMOUNT = 0.001








# GhostVerse Example






# =============================================
# Public variables (exposed on the frontend)
# =============================================

# Elrond chain (can be devnet, testnet, mainnet)
NEXT_PUBLIC_ELROND_CHAIN = mainnet

# This is the masked/proxied public API endpoint
# only current instance of the Dapp can use it if only API_ALLOWED_DAPP_HOST is set
NEXT_PUBLIC_ELROND_API = /api/elrond

# This is basically the main domain of your dapp
###### NEXT_PUBLIC_DAPP_HOST = https://devnet-ghostverse.netlify.app

# The Elven Tools NFT minter smart contract
NEXT_PUBLIC_NFT_SMART_CONTRACT = erd1qqqqqqqqqqqqqpgqw763s7ea3jksp6gr98kmj6psehtu3flndswsswu7hk

# The name for the mint endpoint (change it if you have change it in the smart contract)
###### NEXT_PUBLIC_MINT_FUNCTION_NAME = 'mint'

# The Elven Tools NFT minter base gas limit for the 'mint' endpoint (adjust it for a modified smart contract)
NEXT_PUBLIC_MINT_BASE_GAS_LIMIT = 13000000

# =============================================
# Private variables (used on backend)
# =============================================

# Your main Elrond API can be a custom one. There won't be a possibility
# to reveal this endpoint, it will be masked by NEXT_PUBLIC_ELROND_API
ELROND_CUSTOM_API = https://api.elrond.com

# Only this host will be allowed to consume the API (optional)
# It will work only inside the Dapp, no one will be able to use the endpoint, even in browser
# When commented the API will be available for testing through browser, Postman etc.
API_ALLOWED_DAPP_HOST = https://devnet-ghostverse.netlify.app